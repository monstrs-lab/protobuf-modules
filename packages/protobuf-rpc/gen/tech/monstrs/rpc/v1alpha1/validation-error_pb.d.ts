// @generated by protoc-gen-es v1.2.0 with parameter "target=ts+dts"
// @generated from file tech/monstrs/rpc/v1alpha1/validation-error.proto (package tech.monstrs.rpc.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { LocalizedMessage }  from './localized-message_pb.js'
import type { BinaryReadOptions } from '@bufbuild/protobuf'
import type { FieldList }         from '@bufbuild/protobuf'
import type { JsonReadOptions }   from '@bufbuild/protobuf'
import type { JsonValue }         from '@bufbuild/protobuf'
import type { PartialMessage }    from '@bufbuild/protobuf'
import type { PlainMessage }      from '@bufbuild/protobuf'

import { Message }                from '@bufbuild/protobuf'
import { proto3 }                 from '@bufbuild/protobuf'

/**
 * @generated from message tech.monstrs.rpc.v1alpha1.ValidationErrorMessage
 */
export declare class ValidationErrorMessage extends Message<ValidationErrorMessage> {
  /**
   * @generated from field: string id = 1;
   */
  id: string

  /**
   * @generated from field: string constraint = 2;
   */
  constraint: string

  /**
   * @generated from field: repeated tech.monstrs.rpc.v1alpha1.LocalizedMessage details = 3;
   */
  details: LocalizedMessage[]

  constructor(data?: PartialMessage<ValidationErrorMessage>)

  static readonly runtime: typeof proto3
  static readonly typeName = 'tech.monstrs.rpc.v1alpha1.ValidationErrorMessage'
  static readonly fields: FieldList

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidationErrorMessage

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidationErrorMessage

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): ValidationErrorMessage

  static equals(
    a: ValidationErrorMessage | PlainMessage<ValidationErrorMessage> | undefined,
    b: ValidationErrorMessage | PlainMessage<ValidationErrorMessage> | undefined
  ): boolean
}

/**
 * @generated from message tech.monstrs.rpc.v1alpha1.ValidationError
 */
export declare class ValidationError extends Message<ValidationError> {
  /**
   * @generated from field: string id = 1;
   */
  id: string

  /**
   * @generated from field: string property = 2;
   */
  property: string

  /**
   * @generated from field: repeated tech.monstrs.rpc.v1alpha1.ValidationErrorMessage messages = 3;
   */
  messages: ValidationErrorMessage[]

  constructor(data?: PartialMessage<ValidationError>)

  static readonly runtime: typeof proto3
  static readonly typeName = 'tech.monstrs.rpc.v1alpha1.ValidationError'
  static readonly fields: FieldList

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValidationError

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValidationError

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValidationError

  static equals(
    a: ValidationError | PlainMessage<ValidationError> | undefined,
    b: ValidationError | PlainMessage<ValidationError> | undefined
  ): boolean
}
